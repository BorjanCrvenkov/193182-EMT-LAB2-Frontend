{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Borjan\\\\Desktop\\\\193182 EMT LAB 2\\\\frontend\\\\frontend\\\\src\\\\components\\\\App\\\\App.js\";\nimport './App.css';\nimport React from \"react\";\nimport Books from '../Books/BookList/books';\nimport LabService from \"../../repository/labRepository\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Categories from '../Categories/categories';\nimport Header from '../Header/header';\nimport BookAdd from '../Books/BookAdd/bookAdd';\nimport Authors from '../Authors/AuthorList/authors';\nimport BookEdit from '../Books/BookEdit/bookEdit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBooks = () => {\n      LabService.fetchBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadCategories = () => {\n      LabService.fetchCategories().then(data => {\n        this.setState({\n          categories: data.data\n        });\n      });\n    };\n\n    this.loadAuthors = () => {\n      LabService.fetchAuthors().then(data => {\n        this.setState({\n          authors: data.data\n        });\n      });\n    };\n\n    this.deleteBook = id => {\n      LabService.deleteBook(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.addBook = (name, author, category, availableCopies) => {\n      LabService.addBook(name, author, category, availableCopies).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.getBook = id => {\n      LabService.getBook(id).then(data => {\n        this.setState({\n          selectedBook: data.data\n        });\n      });\n    };\n\n    this.editBook = (id, name, author, category, availableCopies) => {\n      LabService.editBook(id, name, author, category, availableCopies).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.markBookAsTaken = id => {\n      LabService.markBookAsTaken(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.state = {\n      books: [],\n      categories: [],\n      authors: [],\n      selectedBook: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/books/add\",\n              element: /*#__PURE__*/_jsxDEV(BookAdd, {\n                authors: this.state.authors,\n                categories: this.state.categories,\n                onAddBook: this.addBook\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/books/edit/:id\",\n              element: /*#__PURE__*/_jsxDEV(BookEdit, {\n                authors: this.state.authors,\n                categories: this.state.categories,\n                onEditBook: this.editBook,\n                book: this.state.selectedBook\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 70\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/books\",\n              element: /*#__PURE__*/_jsxDEV(Books, {\n                books: this.state.books,\n                onDelete: this.deleteBook,\n                onEdit: this.getBook,\n                onMark: this.markBookAsTaken,\n                oznaci: this.markBookAsTaken\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Books, {\n                books: this.state.books,\n                onDelete: this.deleteBook,\n                onEdit: this.getBook,\n                onMark: this.markBookAsTaken\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/categories\",\n              element: /*#__PURE__*/_jsxDEV(Categories, {\n                categories: this.state.categories\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/authors\",\n              element: /*#__PURE__*/_jsxDEV(Authors, {\n                authors: this.state.authors\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n    this.loadCategories();\n    this.loadAuthors();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Borjan/Desktop/193182 EMT LAB 2/frontend/frontend/src/components/App/App.js"],"names":["React","Books","LabService","BrowserRouter","Router","Route","Routes","Categories","Header","BookAdd","Authors","BookEdit","App","Component","constructor","props","loadBooks","fetchBooks","then","data","setState","books","loadCategories","fetchCategories","categories","loadAuthors","fetchAuthors","authors","deleteBook","id","addBook","name","author","category","availableCopies","getBook","selectedBook","editBook","markBookAsTaken","state","render","componentDidMount"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport Books from '../Books/BookList/books';\nimport LabService from \"../../repository/labRepository\";\nimport {BrowserRouter as Router, Route, Routes} from 'react-router-dom'\nimport Categories from '../Categories/categories'\nimport Header from '../Header/header'\nimport BookAdd from '../Books/BookAdd/bookAdd'\nimport Authors from '../Authors/AuthorList/authors'\nimport BookEdit from '../Books/BookEdit/bookEdit'\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            books : [],\n            categories: [],\n            authors: [],\n            selectedBook: {}\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <Header/>\n                <main>\n                    <div className={\"container\"}>\n                        <Routes>\n                            <Route path={\"/books/add\"} element={<BookAdd authors={this.state.authors} categories={this.state.categories} onAddBook={this.addBook}/>}/>\n                            <Route path={\"/books/edit/:id\"} element={<BookEdit authors={this.state.authors} categories={this.state.categories} onEditBook={this.editBook} book={this.state.selectedBook}/>}/>\n                            <Route path={\"/books\"} element={<Books books={this.state.books} onDelete={this.deleteBook} onEdit={this.getBook} onMark={this.markBookAsTaken} oznaci={this.markBookAsTaken} />}/>\n                            <Route path={\"/\"} element={<Books books={this.state.books} onDelete={this.deleteBook} onEdit={this.getBook} onMark={this.markBookAsTaken}/>}/>\n                            <Route path={\"/categories\"} element={<Categories categories={this.state.categories}/>}/>\n                            <Route path={\"/authors\"} element={<Authors authors={this.state.authors}/>}/>\n                        </Routes>\n\n                    </div>\n                </main>\n            </Router>\n        );\n    }\n\n    componentDidMount() {\n        this.loadBooks();\n        this.loadCategories();\n        this.loadAuthors();\n    }\n\n    loadBooks = () =>{\n        LabService.fetchBooks()\n            .then((data) => {\n                this.setState({\n                    books: data.data\n                });\n            })\n    }\n\n    loadCategories = () =>{\n        LabService.fetchCategories()\n            .then((data) => {\n                this.setState({\n                    categories: data.data\n                });\n            })\n    }\n\n    loadAuthors = () => {\n        LabService.fetchAuthors()\n            .then((data) => {\n                this.setState({\n                    authors: data.data\n                });\n            })\n    }\n\n    deleteBook = (id) => {\n        LabService.deleteBook(id)\n            .then(() => {\n                this.loadBooks();\n            })\n    }\n\n    addBook = (name, author, category, availableCopies) => {\n        LabService.addBook(name, author, category, availableCopies)\n            .then(() => {\n                this.loadBooks()\n            });\n    }\n\n    getBook = (id) => {\n        LabService.getBook(id)\n            .then((data)=>{\n                this.setState({\n                    selectedBook: data.data\n                })\n            })\n    }\n\n    editBook = (id, name, author, category, availableCopies) => {\n        LabService.editBook(id, name, author, category, availableCopies)\n            .then(() => {\n                this.loadBooks()\n            })\n    }\n\n    markBookAsTaken = (id) => {\n        LabService.markBookAsTaken(id)\n            .then(() => {\n                this.loadBooks();\n            })\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}