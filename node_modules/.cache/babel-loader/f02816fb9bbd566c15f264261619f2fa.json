{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Borjan\\\\Desktop\\\\193182 EMT LAB 2\\\\frontend\\\\frontend\\\\src\\\\components\\\\App\\\\App.js\";\nimport './App.css';\nimport React from \"react\";\nimport Books from '../Books/BookList/books';\nimport LabService from \"../../repository/labRepository\";\nimport { BrowserRouter as Router, Redirect, Route, Routes } from 'react-router-dom';\nimport Categories from '../Categories/categories';\nimport Header from '../Header/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loadBooks = () => {\n      LabService.fetchBooks().then(data => {\n        this.setState({\n          books: data.data\n        });\n      });\n    };\n\n    this.loadCategories = () => {\n      LabService.fetchCategories().then(data => {\n        this.setState({\n          categories: data.data\n        });\n      });\n    };\n\n    this.deleteBook = id => {\n      LabService.deleteBook(id).then(() => {\n        this.loadBooks();\n      });\n    };\n\n    this.addBook = (name, category, author, availableCopies) => {\n      LabService.addBook(name, category, author, availableCopies).then(() => this.loadBooks());\n    };\n\n    this.state = {\n      books: [],\n      categories: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/books\",\n              element: /*#__PURE__*/_jsxDEV(Books, {\n                books: this.state.books,\n                onDelete: this.deleteBook\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 61\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(Books, {\n                books: this.state.books\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 56\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/categories\",\n              element: /*#__PURE__*/_jsxDEV(Categories, {\n                categories: this.state.categories\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 66\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  }\n\n  componentDidMount() {\n    this.loadBooks();\n    this.loadCategories();\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Borjan/Desktop/193182 EMT LAB 2/frontend/frontend/src/components/App/App.js"],"names":["React","Books","LabService","BrowserRouter","Router","Redirect","Route","Routes","Categories","Header","App","Component","constructor","props","loadBooks","fetchBooks","then","data","setState","books","loadCategories","fetchCategories","categories","deleteBook","id","addBook","name","category","author","availableCopies","state","render","componentDidMount"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from \"react\";\nimport Books from '../Books/BookList/books';\nimport LabService from \"../../repository/labRepository\";\nimport {BrowserRouter as Router, Redirect, Route, Routes} from 'react-router-dom'\nimport Categories from '../Categories/categories'\nimport Header from '../Header/header'\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            books : [],\n            categories: []\n        }\n    }\n\n    render() {\n        return (\n            <Router>\n                <Header/>\n                <main>\n                    <div className={\"container\"}>\n                        <Routes>\n                            <Route path={\"/books\"} element={<Books books={this.state.books} onDelete={this.deleteBook}/>}/>\n                            <Route path={\"/\"} element={<Books books={this.state.books}/>}/>\n\n\n                            <Route path={\"/categories\"} element={<Categories categories={this.state.categories}/>}/>\n\n                        </Routes>\n\n                    </div>\n                </main>\n            </Router>\n        );\n    }\n\n    componentDidMount() {\n        this.loadBooks();\n        this.loadCategories()\n    }\n\n    loadBooks = () =>{\n        LabService.fetchBooks()\n            .then((data) => {\n                this.setState({\n                    books: data.data\n                });\n            })\n    }\n\n    loadCategories = () =>{\n        LabService.fetchCategories()\n            .then((data) => {\n                this.setState({\n                    categories: data.data\n                });\n            })\n    }\n\n    deleteBook = (id) =>{\n        LabService.deleteBook(id)\n            .then(() =>{\n                this.loadBooks();\n            })\n    }\n\n    addBook = (name, category, author, availableCopies) => {\n        LabService.addBook(name,category,author,availableCopies)\n            .then(() => this.loadBooks());\n    }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}